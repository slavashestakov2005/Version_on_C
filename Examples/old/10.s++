import functional
import std
import math
println "*" * factorial(5)
a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
for i = 1, i < 11, ++i {
	a = a + i
}
println a
a = a + 11
println a
a += 1
println a
a = filter(a, def(x) = x % 2 == 0)
for i = 0, i < 10, ++i { a += i println a }

square = map(a, def(x) = x * x)
println square
foreach(square, ::echo)
square = reduce(square, 0, def(x, y) = x + y)
println "Sum : " + square



mapping = { 1 : "one", "t2" : "two"}
println mapping
println mapping["t2"]

println mapping["t2"] 	// this was DOT

/*
x = 0
a = [def(x) = x, def(x) = x + 1]
println a
println a[1]


class = {
	"add" : def(a, b) = a + b,
	"sub" : def(a, b) = a - b,
	"mul" : def(a, b) = a * b,
	"div" : def(a, b) = a / b
}
println class.add(2, 2)
println class.add(2, class.mul(2, 2))
*/