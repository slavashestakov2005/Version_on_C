<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="second" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="Debug">
				<Option output="bin/Debug/second" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Option parameters="-h" />
				<Compiler>
					<Add option="-g" />
					<Add directory="$(#sfml)" />
				</Compiler>
				<Linker>
					<Add library="sfml-graphics" />
					<Add library="sfml-window" />
					<Add library="sfml-audio" />
					<Add library="sfml-network" />
					<Add library="sfml-system" />
					<Add directory="$(#sfml)" />
				</Linker>
			</Target>
			<Target title="Release">
				<Option output="bin/Release/second" prefix_auto="1" extension_auto="1" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Option parameters="-h" />
				<Compiler>
					<Add option="-O2" />
					<Add directory="../SFML-2.5.1/include" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add library="sfml-graphics" />
					<Add library="sfml-window" />
					<Add library="sfml-audio" />
					<Add library="sfml-network" />
					<Add library="sfml-system" />
					<Add directory="../SFML-2.5.1/lib" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-Wall" />
			<Add option="-fexceptions" />
			<Add directory="../SFML-2.5.1/include" />
		</Compiler>
		<Linker>
			<Add library="sfml-graphics" />
			<Add library="sfml-window" />
			<Add library="sfml-audio" />
			<Add library="sfml-network" />
			<Add library="sfml-system" />
			<Add directory="../SFML-2.5.1/lib" />
		</Linker>
		<Unit filename="Exception/argumentsmismatchexception.h" />
		<Unit filename="Exception/lexerexception.cpp" />
		<Unit filename="Exception/lexerexception.h" />
		<Unit filename="Exception/mathexception.h" />
		<Unit filename="Exception/operationIsnotsupportedexception.h" />
		<Unit filename="Exception/parseexception.cpp" />
		<Unit filename="Exception/parseexception.h" />
		<Unit filename="Exception/typeexception.h" />
		<Unit filename="Exception/unknownclassexception.h" />
		<Unit filename="Exception/unknownfunctionexception.h" />
		<Unit filename="Exception/unknownmoduleexception.h" />
		<Unit filename="Exception/unknownpropertyexception.h" />
		<Unit filename="Exception/variabledoesnotexistsexception.h" />
		<Unit filename="Expression/all.h" />
		<Unit filename="Expression/arrayexpression.cpp" />
		<Unit filename="Expression/arrayexpression.h" />
		<Unit filename="Expression/assignmentexpression.cpp" />
		<Unit filename="Expression/assignmentexpression.h" />
		<Unit filename="Expression/binaryexpression.cpp" />
		<Unit filename="Expression/binaryexpression.h" />
		<Unit filename="Expression/conditionalexpression.cpp" />
		<Unit filename="Expression/conditionalexpression.h" />
		<Unit filename="Expression/containeracceselement.cpp" />
		<Unit filename="Expression/containeracceselement.h" />
		<Unit filename="Expression/containeraccessexpression.cpp" />
		<Unit filename="Expression/containeraccessexpression.h" />
		<Unit filename="Expression/containerassignmentexpression.cpp" />
		<Unit filename="Expression/containerassignmentexpression.h" />
		<Unit filename="Expression/expression.h" />
		<Unit filename="Expression/functionalexpression.cpp" />
		<Unit filename="Expression/functionalexpression.h" />
		<Unit filename="Expression/functionreferenceexpression.cpp" />
		<Unit filename="Expression/functionreferenceexpression.h" />
		<Unit filename="Expression/mapexpression.cpp" />
		<Unit filename="Expression/mapexpression.h" />
		<Unit filename="Expression/objectcreationexpression.cpp" />
		<Unit filename="Expression/objectcreationexpression.h" />
		<Unit filename="Expression/ternaryexpression.cpp" />
		<Unit filename="Expression/ternaryexpression.h" />
		<Unit filename="Expression/unaryexpression.cpp" />
		<Unit filename="Expression/unaryexpression.h" />
		<Unit filename="Expression/valueexpression.cpp" />
		<Unit filename="Expression/valueexpression.h" />
		<Unit filename="Expression/variableexpression.cpp" />
		<Unit filename="Expression/variableexpression.h" />
		<Unit filename="Lib/argument.cpp" />
		<Unit filename="Lib/argument.h" />
		<Unit filename="Lib/arguments.cpp" />
		<Unit filename="Lib/arguments.h" />
		<Unit filename="Lib/array.cpp" />
		<Unit filename="Lib/array.h" />
		<Unit filename="Lib/bignumber.cpp" />
		<Unit filename="Lib/bignumber.h" />
		<Unit filename="Lib/bignumbers/bignum.cpp" />
		<Unit filename="Lib/bignumbers/bignum.h" />
		<Unit filename="Lib/bignumbers/smath.cpp" />
		<Unit filename="Lib/bignumbers/smath.h" />
		<Unit filename="Lib/bool.cpp" />
		<Unit filename="Lib/bool.h" />
		<Unit filename="Lib/classdeclaration.cpp" />
		<Unit filename="Lib/classdeclaration.h" />
		<Unit filename="Lib/classmethod.cpp" />
		<Unit filename="Lib/classmethod.h" />
		<Unit filename="Lib/classvalue.cpp" />
		<Unit filename="Lib/classvalue.h" />
		<Unit filename="Lib/container.h" />
		<Unit filename="Lib/function.h" />
		<Unit filename="Lib/functions.cpp" />
		<Unit filename="Lib/functions.h" />
		<Unit filename="Lib/functionvalue.cpp" />
		<Unit filename="Lib/functionvalue.h" />
		<Unit filename="Lib/map.cpp" />
		<Unit filename="Lib/map.h" />
		<Unit filename="Lib/null.cpp" />
		<Unit filename="Lib/null.h" />
		<Unit filename="Lib/string.cpp" />
		<Unit filename="Lib/string.h" />
		<Unit filename="Lib/userdefinedfunction.cpp" />
		<Unit filename="Lib/userdefinedfunction.h" />
		<Unit filename="Lib/value.cpp" />
		<Unit filename="Lib/value.h" />
		<Unit filename="Lib/variables.cpp" />
		<Unit filename="Lib/variables.h" />
		<Unit filename="Modules/all.h" />
		<Unit filename="Modules/chemistry.cpp" />
		<Unit filename="Modules/chemistry.h" />
		<Unit filename="Modules/draw.cpp" />
		<Unit filename="Modules/draw.h" />
		<Unit filename="Modules/files.cpp" />
		<Unit filename="Modules/files.h" />
		<Unit filename="Modules/functional.cpp" />
		<Unit filename="Modules/functional.h" />
		<Unit filename="Modules/global.cpp" />
		<Unit filename="Modules/global.h" />
		<Unit filename="Modules/math.cpp" />
		<Unit filename="Modules/math.h" />
		<Unit filename="Modules/module.h" />
		<Unit filename="Modules/std.cpp" />
		<Unit filename="Modules/std.h" />
		<Unit filename="Modules/types.cpp" />
		<Unit filename="Modules/types.h" />
		<Unit filename="Parser/lexer.cpp" />
		<Unit filename="Parser/lexer.h" />
		<Unit filename="Parser/parseerror.cpp" />
		<Unit filename="Parser/parseerror.h" />
		<Unit filename="Parser/parseerrors.cpp" />
		<Unit filename="Parser/parseerrors.h" />
		<Unit filename="Parser/parser.cpp" />
		<Unit filename="Parser/parser.h" />
		<Unit filename="Parser/token.cpp" />
		<Unit filename="Parser/token.h" />
		<Unit filename="Parser/tokentype.h" />
		<Unit filename="Statement/all.h" />
		<Unit filename="Statement/blockstatement.cpp" />
		<Unit filename="Statement/blockstatement.h" />
		<Unit filename="Statement/breakstatement.cpp" />
		<Unit filename="Statement/breakstatement.h" />
		<Unit filename="Statement/classdeclarationsstatement.cpp" />
		<Unit filename="Statement/classdeclarationsstatement.h" />
		<Unit filename="Statement/continuestatement.cpp" />
		<Unit filename="Statement/continuestatement.h" />
		<Unit filename="Statement/dowhilestatement.cpp" />
		<Unit filename="Statement/dowhilestatement.h" />
		<Unit filename="Statement/exprtostat.cpp" />
		<Unit filename="Statement/exprtostat.h" />
		<Unit filename="Statement/foreacharraystatement.cpp" />
		<Unit filename="Statement/foreacharraystatement.h" />
		<Unit filename="Statement/foreachmapstatement.cpp" />
		<Unit filename="Statement/foreachmapstatement.h" />
		<Unit filename="Statement/forstatement.cpp" />
		<Unit filename="Statement/forstatement.h" />
		<Unit filename="Statement/functiondefinestatement.cpp" />
		<Unit filename="Statement/functiondefinestatement.h" />
		<Unit filename="Statement/functionstatement.cpp" />
		<Unit filename="Statement/functionstatement.h" />
		<Unit filename="Statement/ifstatement.cpp" />
		<Unit filename="Statement/ifstatement.h" />
		<Unit filename="Statement/importstatement.cpp" />
		<Unit filename="Statement/importstatement.h" />
		<Unit filename="Statement/printlnstatement.cpp" />
		<Unit filename="Statement/printlnstatement.h" />
		<Unit filename="Statement/printstatement.cpp" />
		<Unit filename="Statement/printstatement.h" />
		<Unit filename="Statement/returnstatement.cpp" />
		<Unit filename="Statement/returnstatement.h" />
		<Unit filename="Statement/statement.h" />
		<Unit filename="Statement/switchstatement.cpp" />
		<Unit filename="Statement/switchstatement.h" />
		<Unit filename="Statement/throwstatement.cpp" />
		<Unit filename="Statement/throwstatement.h" />
		<Unit filename="Statement/trystatement.cpp" />
		<Unit filename="Statement/trystatement.h" />
		<Unit filename="Statement/whilestatement.cpp" />
		<Unit filename="Statement/whilestatement.h" />
		<Unit filename="Visitor/assignvalidator.cpp" />
		<Unit filename="Visitor/assignvalidator.h" />
		<Unit filename="Visitor/functionadder.cpp" />
		<Unit filename="Visitor/functionadder.h" />
		<Unit filename="Visitor/importadder.cpp" />
		<Unit filename="Visitor/importadder.h" />
		<Unit filename="Visitor/node.h" />
		<Unit filename="Visitor/variableprinter.cpp" />
		<Unit filename="Visitor/variableprinter.h" />
		<Unit filename="Visitor/visitor.cpp" />
		<Unit filename="Visitor/visitor.h" />
		<Unit filename="callstack.cpp" />
		<Unit filename="callstack.h" />
		<Unit filename="icon.rc">
			<Option compilerVar="WINDRES" />
		</Unit>
		<Unit filename="main.cpp" />
		<Unit filename="path.cpp" />
		<Unit filename="path.h" />
		<Unit filename="repl.cpp" />
		<Unit filename="repl.h" />
		<Unit filename="start.cpp" />
		<Unit filename="start.h" />
		<Extensions>
			<code_completion />
			<envvars />
			<debugger />
			<lib_finder disable_auto="1" />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
